{"version":3,"sources":["Firebase.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Show.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","boards","forEach","doc","_doc$data","data","title","description","author","push","key","id","setState","ref","firestore","collection","unsubscribe","state","onSnapshot","react_default","a","createElement","class","react_router_dom","to","map","board","concat","Component","Boolean","window","location","hostname","match","Edit","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","set","then","docRef","history","params","catch","error","console","_this2","get","exists","log","for","type","placeholder","Create","add","_this$state2","cols","rows","Show","isLoading","_this3","delete","onClick","bind","ReactDOM","render","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29ac8c0a.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst settings = {timestampsInSnapshots: true};\nconst config = {\n    apiKey: \"AIzaSyC1R5zfo6RNepYDwnxjW3TBFmN8acj6Mio\",\n    authDomain: \"todo-a3b50.firebaseapp.com\",\n    databaseURL: \"https://todo-a3b50.firebaseio.com\",\n    projectId: \"todo-a3b50\",\n    storageBucket: \"todo-a3b50.appspot.com\",\n    messagingSenderId: \"884395417729\"\n}\nfirebase.initializeApp(config);\n\nfirebase.firestore().settings(settings);\n\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport firebase from './Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('boards');\n    this.unsubscribe = null;\n    this.state = {\n      boards: []\n    };\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const boards = [];\n    querySnapshot.forEach((doc) => {\n      const { title, description, author } = doc.data();\n      boards.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        title,\n        description,\n        author,\n      });\n    });\n    this.setState({\n      boards\n   });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              BOARD LIST\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/create\">Add Board</Link></h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Author</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.boards.map(board =>\n                  <tr>\n                    <td><Link to={`/show/${board.key}`}>{board.title}</Link></td>\n                    <td>{board.description}</td>\n                    <td>{board.author}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      title: '',\n      description: '',\n      author: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('boards').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        const board = doc.data();\n        this.setState({\n          key: doc.id,\n          title: board.title,\n          description: board.description,\n          author: board.author\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState({board:state});\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { title, description, author } = this.state;\n\n    const updateRef = firebase.firestore().collection('boards').doc(this.state.key);\n    updateRef.set({\n      title,\n      description,\n      author\n    }).then((docRef) => {\n      this.setState({\n        key: '',\n        title: '',\n        description: '',\n        author: ''\n      });\n      this.props.history.push(\"/show/\"+this.props.match.params.id)\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              EDIT BOARD\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to={`/show/${this.state.key}`} class=\"btn btn-primary\">Board List</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Title:</label>\n                <input type=\"text\" class=\"form-control\" name=\"title\" value={this.state.title} onChange={this.onChange} placeholder=\"Title\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Description:</label>\n                <input type=\"text\" class=\"form-control\" name=\"description\" value={this.state.description} onChange={this.onChange} placeholder=\"Description\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Author:</label>\n                <input type=\"text\" class=\"form-control\" name=\"author\" value={this.state.author} onChange={this.onChange} placeholder=\"Author\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Create extends Component {\n\n  constructor() {\n    super();\n    this.ref = firebase.firestore().collection('boards');\n    this.state = {\n      title: '',\n      description: '',\n      author: ''\n    };\n  }\n  onChange = (e) => {\n    const state = this.state\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { title, description, author } = this.state;\n\n    this.ref.add({\n      title,\n      description,\n      author\n    }).then((docRef) => {\n      this.setState({\n        title: '',\n        description: '',\n        author: ''\n      });\n      this.props.history.push(\"/\")\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  render() {\n    const { title, description, author } = this.state;\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              ADD BOARD\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/\" class=\"btn btn-primary\">Book List</Link></h4>\n            <form onSubmit={this.onSubmit}>\n              <div class=\"form-group\">\n                <label for=\"title\">Title:</label>\n                <input type=\"text\" class=\"form-control\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Title\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"description\">Description:</label>\n                <textArea class=\"form-control\" name=\"description\" onChange={this.onChange} placeholder=\"Description\" cols=\"80\" rows=\"3\">{description}</textArea>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"author\">Author:</label>\n                <input type=\"text\" class=\"form-control\" name=\"author\" value={author} onChange={this.onChange} placeholder=\"Author\" />\n              </div>\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nclass Show extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {},\n      key: ''\n    };\n  }\n\n  componentDidMount() {\n    const ref = firebase.firestore().collection('boards').doc(this.props.match.params.id);\n    ref.get().then((doc) => {\n      if (doc.exists) {\n        this.setState({\n          board: doc.data(),\n          key: doc.id,\n          isLoading: false\n        });\n      } else {\n        console.log(\"No such document!\");\n      }\n    });\n  }\n\n  delete(id){\n    firebase.firestore().collection('boards').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      this.props.history.push(\"/\")\n    }).catch((error) => {\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n          <h4><Link to=\"/\">Board List</Link></h4>\n            <h3 class=\"panel-title\">\n              {this.state.board.title}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <dl>\n              <dt>Description:</dt>\n              <dd>{this.state.board.description}</dd>\n              <dt>Author:</dt>\n              <dd>{this.state.board.author}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.key}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n            <button onClick={this.delete.bind(this, this.state.key)} class=\"btn btn-danger\">Delete</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\n\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/edit/:id' component={Edit} />\n        <Route path='/create' component={Create} />\n        <Route path='/show/:id' component={Show} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}